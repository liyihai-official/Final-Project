

#include <iostream>
#include <mpi.h>

#include "types.hpp"

#include "multiarray.hpp"

// #include <pde/pde.hpp>
// #include "pde/Heat.hpp"
#include <pde/detials/Heat_2D.hpp>
#include <pde/detials/InitializationsC.hpp>
#include <pde/detials/BoundaryConditions/BoundaryConditions.hpp>



#if !defined(NX) || !defined(NY)
#define NX 1000+2
#define NY 1000+2
#define NZ 15+2
#endif


// |  0.00000  0.09091  0.18182  0.27273  0.36364  0.45455  0.54545  0.63636  0.72727  0.81818  0.90909  0.00000 |
// |  0.20000  0.27272  0.34543  0.41815  0.49088  0.56360  0.63633  0.70906  0.78179  0.85453  0.92726  1.00000 |
// |  0.40000  0.45453  0.50906  0.56359  0.61813  0.67267  0.72721  0.78176  0.83632  0.89088  0.94544  1.00000 |
// |  0.60000  0.63635  0.67270  0.70905  0.74540  0.78176  0.81812  0.85449  0.89086  0.92724  0.96362  1.00000 |
// |  0.80000  0.81817  0.83634  0.85452  0.87269  0.89087  0.90906  0.92724  0.94543  0.96362  0.98181  1.00000 |
// |  0.00000  1.00000  1.00000  1.00000  1.00000  1.00000  1.00000  1.00000  1.00000  1.00000  1.00000  0.00000 |

// |  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000 |
// |  0.00000  0.16529  0.23967  0.31405  0.38843  0.46281  0.53719  0.61157  0.68595  0.76033  0.83471  0.00000 |
// |  0.00000  0.23967  0.29752  0.35537  0.41322  0.47107  0.52893  0.58678  0.64463  0.70248  0.76033  0.00000 |
// |  0.00000  0.31405  0.35537  0.39669  0.43802  0.47934  0.52066  0.56198  0.60331  0.64463  0.68595  0.00000 |
// |  0.00000  0.38843  0.41322  0.43802  0.46281  0.48760  0.51240  0.53719  0.56198  0.58678  0.61157  0.00000 |
// |  0.00000  0.46281  0.47107  0.47934  0.48760  0.49587  0.50413  0.51240  0.52066  0.52893  0.53719  0.00000 |
// |  0.00000  0.53719  0.52893  0.52066  0.51240  0.50413  0.49587  0.48760  0.47934  0.47107  0.46281  0.00000 |
// |  0.00000  0.61157  0.58678  0.56198  0.53719  0.51240  0.48760  0.46281  0.43802  0.41322  0.38843  0.00000 |
// |  0.00000  0.68595  0.64463  0.60331  0.56198  0.52066  0.47934  0.43802  0.39669  0.35537  0.31405  0.00000 |
// |  0.00000  0.76033  0.70248  0.64463  0.58678  0.52893  0.47107  0.41322  0.35537  0.29752  0.23967  0.00000 |
// |  0.00000  0.83471  0.76033  0.68595  0.61157  0.53719  0.46281  0.38843  0.31405  0.23967  0.16529  0.00000 |
// |  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000 |

// |  0.00000  0.25455  0.30909  0.36364  0.41818  0.47273  0.52727  0.58182  0.63636  0.69091  0.74545  0.00000 |
// |  0.25455  0.06791  0.04483  0.05357  0.06230  0.07104  0.07978  0.08852  0.09726  0.10600  0.20792  0.74545 |
// |  0.30909  0.04483  0.00768  0.00918  0.01067  0.01217  0.01366  0.01515  0.01665  0.01814  0.10600  0.69091 |
// |  0.36364  0.05357  0.00918  0.01025  0.01131  0.01238  0.01345  0.01451  0.01558  0.01665  0.09726  0.63636 |
// |  0.41818  0.06230  0.01067  0.01131  0.01195  0.01259  0.01323  0.01387  0.01451  0.01515  0.08852  0.58182 |
// |  0.47273  0.07104  0.01217  0.01238  0.01259  0.01281  0.01302  0.01323  0.01345  0.01366  0.07978  0.52727 |
// |  0.52727  0.07978  0.01366  0.01345  0.01323  0.01302  0.01281  0.01259  0.01238  0.01217  0.07104  0.47273 |
// |  0.58182  0.08852  0.01515  0.01451  0.01387  0.01323  0.01259  0.01195  0.01131  0.01067  0.06230  0.41818 |
// |  0.63636  0.09726  0.01665  0.01558  0.01451  0.01345  0.01238  0.01131  0.01025  0.00918  0.05357  0.36364 |
// |  0.69091  0.10600  0.01814  0.01665  0.01515  0.01366  0.01217  0.01067  0.00918  0.00768  0.04483  0.30909 |
// |  0.74545  0.20792  0.10600  0.09726  0.08852  0.07978  0.07104  0.06230  0.05357  0.04483  0.06791  0.25455 |
// |  0.00000  0.74545  0.69091  0.63636  0.58182  0.52727  0.47273  0.41818  0.36364  0.30909  0.25455  0.00000 |

// |  0.00000  0.41818  0.43636  0.45455  0.47273  0.49091  0.50909  0.52727  0.54545  0.56364  0.58182  0.00000 |
// |  0.41818  0.10455  0.05455  0.05682  0.05909  0.06136  0.06364  0.06591  0.06818  0.07045  0.14545  0.58182 |
// |  0.43636  0.05455  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.07045  0.56364 |
// |  0.45455  0.05682  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.06818  0.54545 |
// |  0.47273  0.05909  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.06591  0.52727 |
// |  0.49091  0.06136  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.06364  0.50909 |
// |  0.50909  0.06364  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.06136  0.49091 |
// |  0.52727  0.06591  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.05909  0.47273 |
// |  0.54545  0.06818  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.05682  0.45455 |
// |  0.56364  0.07045  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.05455  0.43636 |
// |  0.58182  0.14545  0.07045  0.06818  0.06591  0.06364  0.06136  0.05909  0.05682  0.05455  0.10455  0.41818 |
// |  0.00000  0.58182  0.56364  0.54545  0.52727  0.50909  0.49091  0.47273  0.45455  0.43636  0.41818  0.00000 |

// |  0.00000  0.58182  0.56364  0.54545  0.52727  0.50909  0.49091  0.47273  0.45455  0.43636  0.41818  0.00000 |
// |  0.58182  0.14545  0.07045  0.06818  0.06591  0.06364  0.06136  0.05909  0.05682  0.05455  0.10455  0.41818 |
// |  0.56364  0.07045  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.05455  0.43636 |
// |  0.54545  0.06818  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.05682  0.45455 |
// |  0.52727  0.06591  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.05909  0.47273 |
// |  0.50909  0.06364  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.06136  0.49091 |
// |  0.49091  0.06136  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.06364  0.50909 |
// |  0.47273  0.05909  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.06591  0.52727 |
// |  0.45455  0.05682  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.06818  0.54545 |
// |  0.43636  0.05455  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.07045  0.56364 |
// |  0.41818  0.10455  0.05455  0.05682  0.05909  0.06136  0.06364  0.06591  0.06818  0.07045  0.14545  0.58182 |
// |  0.00000  0.41818  0.43636  0.45455  0.47273  0.49091  0.50909  0.52727  0.54545  0.56364  0.58182  0.00000 |

// |  0.00000  0.74545  0.69091  0.63636  0.58182  0.52727  0.47273  0.41818  0.36364  0.30909  0.25455  0.00000 |
// |  0.74545  0.20792  0.10600  0.09726  0.08852  0.07978  0.07104  0.06230  0.05357  0.04483  0.06791  0.25455 |
// |  0.69091  0.10600  0.01814  0.01665  0.01515  0.01366  0.01217  0.01067  0.00918  0.00768  0.04483  0.30909 |
// |  0.63636  0.09726  0.01665  0.01558  0.01451  0.01345  0.01238  0.01131  0.01025  0.00918  0.05357  0.36364 |
// |  0.58182  0.08852  0.01515  0.01451  0.01387  0.01323  0.01259  0.01195  0.01131  0.01067  0.06230  0.41818 |
// |  0.52727  0.07978  0.01366  0.01345  0.01323  0.01302  0.01281  0.01259  0.01238  0.01217  0.07104  0.47273 |
// |  0.47273  0.07104  0.01217  0.01238  0.01259  0.01281  0.01302  0.01323  0.01345  0.01366  0.07978  0.52727 |
// |  0.41818  0.06230  0.01067  0.01131  0.01195  0.01259  0.01323  0.01387  0.01451  0.01515  0.08852  0.58182 |
// |  0.36364  0.05357  0.00918  0.01025  0.01131  0.01238  0.01345  0.01451  0.01558  0.01665  0.09726  0.63636 |
// |  0.30909  0.04483  0.00768  0.00918  0.01067  0.01217  0.01366  0.01515  0.01665  0.01814  0.10600  0.69091 |
// |  0.25455  0.06791  0.04483  0.05357  0.06230  0.07104  0.07978  0.08852  0.09726  0.10600  0.20792  0.74545 |
// |  0.00000  0.25455  0.30909  0.36364  0.41818  0.47273  0.52727  0.58182  0.63636  0.69091  0.74545  0.00000 |

// |  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000 |
// |  0.00000  0.83471  0.76033  0.68595  0.61157  0.53719  0.46281  0.38843  0.31405  0.23967  0.16529  0.00000 |
// |  0.00000  0.76033  0.70248  0.64463  0.58678  0.52893  0.47107  0.41322  0.35537  0.29752  0.23967  0.00000 |
// |  0.00000  0.68595  0.64463  0.60331  0.56198  0.52066  0.47934  0.43802  0.39669  0.35537  0.31405  0.00000 |
// |  0.00000  0.61157  0.58678  0.56198  0.53719  0.51240  0.48760  0.46281  0.43802  0.41322  0.38843  0.00000 |
// |  0.00000  0.53719  0.52893  0.52066  0.51240  0.50413  0.49587  0.48760  0.47934  0.47107  0.46281  0.00000 |
// |  0.00000  0.46281  0.47107  0.47934  0.48760  0.49587  0.50413  0.51240  0.52066  0.52893  0.53719  0.00000 |
// |  0.00000  0.38843  0.41322  0.43802  0.46281  0.48760  0.51240  0.53719  0.56198  0.58678  0.61157  0.00000 |
// |  0.00000  0.31405  0.35537  0.39669  0.43802  0.47934  0.52066  0.56198  0.60331  0.64463  0.68595  0.00000 |
// |  0.00000  0.23967  0.29752  0.35537  0.41322  0.47107  0.52893  0.58678  0.64463  0.70248  0.76033  0.00000 |
// |  0.00000  0.16529  0.23967  0.31405  0.38843  0.46281  0.53719  0.61157  0.68595  0.76033  0.83471  0.00000 |
// |  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000  0.00000 |


int 
main ( int argc, char ** argv )
{

  constexpr final_project::Integer root_proc {0};
  constexpr final_project::Double tol {1E-3};
  constexpr final_project::Dworld nsteps {1000000}, stepinterval {nsteps / 1000};
  constexpr final_project::Dworld numDim {3}, nx {NX}, ny {NY}, nz {NZ};

  auto mpi_world {final_project::mpi::environment(argc, argv)};

  final_project::pde::Heat_2D<double> obj(mpi_world, nx, ny);

  std::function<double(double, double)> InitCond {[](double x, double y) { return x; }};
  final_project::pde::InitialConditions::Init_2D<double> IC ( InitCond );

  obj.SetHeatInitC(IC);
  final_project::pde::BoundaryConditions_2D<double> BC (false, true, true, false);
  // BC.SetBC(obj, 1, 2,3,4);
  // obj.SetHeatBC(BC, 1, 2, 3, -1);

  // for (final_project::Integer i = 1; i < 100; ++i)
  // {
  //   obj.update_ping_pong();
  //   obj.exchange_ping_pong();
  //   obj.switch_in_out();
  // }
  // obj.show();

  // auto gather {final_project::multi_array::array_base<double, 2>(nx, ny)};

  // std::cout << A << std::endl;

  auto iter = obj.solve_pure_mpi(1E-3, 10000);

  // std::cout << "Converge at : " << std::fixed << std::setw(7) << iter << std::endl;
  // obj.show();
  // BC.SetBC(obj, 1, 2,3,4);
  // obj.show();

  obj.SaveToBinary("test.bin");



  // auto mat {final_project::mpi::array_Cart<double, numDim>(mpi_world, nx, ny, nz)};
  // auto gather {final_project::multi_array::array_base<double, numDim>(nx, ny, nz)};
  

  // // Brief information of setups
  // if (root_proc == mpi_world.rank())
  // {
  //   std::cout << numDim << " Dimension Simulation Parameters: "     << std::endl;
  //   std::cout << "\tRows: "       << nx 
  //             << "\n\tColumns: "  << ny     << std::endl;
  //   std::cout << "\tTime steps: " << nsteps << std::endl;
  //   std::cout << "\tTolerance: "  << tol    << std::endl;

  //   std::cout << "MPI Parameters: "             << std::endl;
  //   std::cout << "\tNumber of MPI Processes: "  << mpi_world.size() << std::endl;
  //   std::cout << "\tRoot Process: "             << root_proc        << std::endl;
  // }

  // MPI_Barrier(mpi_world.comm());
  // if (mpi_world.rank () == 0)
  // {
  //   gather.data().fill(-1);
  // }
  // mat.array().__loc_array.fill(5+mpi_world.rank());

  
  // final_project::mpi::Gather(gather, mat, 0);


  // MPI_Barrier(mpi_world.comm());
  // if (mpi_world.rank() == 0)
  // {
  //   std::cout << gather.data() << std::endl;
  // }

  // std::cout << mat.array() << std::endl;

  return 0;
}